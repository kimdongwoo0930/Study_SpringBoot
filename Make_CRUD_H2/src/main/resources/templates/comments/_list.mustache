<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- 모달 트리거 버튼 -->
                <button type="button"
                        class="btn btn-sm btn-outline btn-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}"> 수정
                </button>
                <button type="button"
                class="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id = "{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>
                    <!-- 댓글 본문 입력 -->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control form-control-sm" rows="3" id="edit-comment-body"></textarea>
                    </div>
                    <!-- 히든 인풋 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <!-- 전송 버튼 -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">수정하기</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- 모달 이벤트-->
<script>
{
    // 모달 이벤트 처리
    const commentEditModal = document.querySelector("#comment-edit-modal");
    // 모달 이벤트 감지
    commentEditModal.addEventListener('show.bs.modal',function(event){
        console.log("모달 열림");
        // 트리거 버튼 선택
        const triggerBtn = event.relatedTarget;
        // 데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-articleId");
        // 데이터 반영
        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-id").value = id;
        document.querySelector("#edit-comment-article-id").value = articleId;
    });
}
// 댓글 수정부분
{

    // 댓글 수정 버튼 변수화
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    // 버튼 클릭 이벤트 감지시 함수
    commentUpdateBtn.addEventListener("click", function(){
        // 댓글 객체 다시만들기
        const comment = {
            id : document.querySelector("#edit-comment-id").value,
            nickname : document.querySelector("#edit-comment-nickname").value,
            body : document.querySelector("#edit-comment-body").value,
            article_id : document.querySelector("#edit-comment-article-id").value
        };

        // fetch()  - API 요청을 js에서 보내준다.
        const url = "/api/comments/" + comment.id;
        fetch(url, {
            method: "PATCH",
            body : JSON.stringify(comment),
            headers : {
                "Content-Type" : "application/json"
            }
        }).then(response => {
        // http 응답코드에 따른 메세지 출력
            const msg = (response.ok) ? "댓글 수정" : "수정실패";
            alert(msg);
            window.location.reload();
        });
    });
}
</script>

<!-- 댓글 삭제 -->
<script>
{
    // 삭제 클릭 버튼
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
    // 삭제 클릭 이벤트 처리   각 버튼의 이벤트 처리를 등록
    commentDeleteBtns.forEach(btn => {
        btn.addEventListener("click", (event) => {
            // 이벤트 발생 요소 선택
            const commentDeleteBtn = event.srcElement;
            // 삭제 댓글 id 가져오기
            const commentId = commentDeleteBtn.getAttribute("data-comment-id");

            const url = `/api/comments/${commentId}`;
            fetch(url,{
                method : "DELETE"
            }).then(response => {
                // 댓글 삭제 실패
                if(!response.ok){
                    alert("댓글 삭제 실패");
                    return;
                }
                // 삭제 성공

                const target = document.querySelector(`#comments-${commentId}`);
                target.remove();
            });
        });
    });
}
</script>


